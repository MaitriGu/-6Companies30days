class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
      return atmostSum(nums,k)-atmostSum(nums,k-1) ; 
    }
    int atmostSum(vector<int>&nums,int k){
        int left=0;
        int right=0;
        int n =nums.size();
        int result=0;
        int sum=0;
        bool flag=false;
        for(int i=0;i<n;i++){
            if(nums[i]%2==0)
            nums[i]=0;
            else{
                nums[i]=1;
                flag=true;
            }
        }
        if(!flag)
        return 0;
        while(right<n){
            sum+=nums[right];
            while(sum>k){
                sum-=nums[left];
                left++;
            }
            if(sum<=k)
            result+=right-left+1;
            right++;
        }
        return result;
    }
};
